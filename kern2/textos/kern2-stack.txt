Explicar: ¿qué significa “estar alineado”?

“Estar alineado” consiste en una restricción que impone el sistema operativo hacia las direcciones permitidas para los tipos de datos primitivos, requiriéndoles a los mismos que sean un multiplo de K (típicamente 2, 4 u 8). Estas restricciones simplifican el diseño del hardware, formando una interfaz entre el procesador y la memoria.


Mostrar la sintaxis de C/GCC para alinear a 32 bits el arreglo kstack anterior.

La sintaxis para alinear a 32 bits el arreglo sería de la siguiente manera:
unsigned char kstack[8192] __attribute__ ((aligned (4));


¿A qué valor se está inicializando kstack? ¿Varía entre la versión C y la versión ASM? (Leer la documentación de as sobre la directiva .space.)

.space únicamente reserva un espacio en memoria pero no indica nada acerca del alineamiento del espacio reservado.
En el código de C el arreglo siempre debería tener una dirección múltiplo de 4.


Explicar la diferencia entre las directivas .align y .p2align de as, y mostrar cómo alinear el stack del kernel a 4 KiB usando cada una de ellas.

La diferencia consiste en que .p2align k avanza el location counter a la siguiente dirección más cercana que sea múltiplo de 2^k.
Por el otro lado .align k avanza el location counter a una dirección múltiplo de k.

Para alinear el stack a 4KB se puede hacer:
.p2align 12	// 2^12 = 4096 bytes = 4KB
.align   4096   // 4096 bytes = 4KB





